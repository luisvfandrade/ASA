Problema1(X)
    if |X| == 0
        return 0, 0
    let LIS be an array of size |X| = {1}
    LIS[0] = 1
    let maxLIS = 1, nLIS = |X|
    for i = 1 to |X| - 1
        let j = i - 1
        while j >= 0 and X[j] > X[i]
            j--
        if j >= 0
            LIS[i] = LIS[j] + 1
            if LIS[i] > maxLIS
                maxLIX = LIS[i]
                nLIS = 1
            else if LIS[i] == maxLIS
                nLIS = nLIS + 1
    return maxLIS, nLIS

Problema2(X1, X2)
    if |X1| == 0 or |X2| == 0
        return 0
    let smaller = min(X1, X2), bigger = max(X1, X2)
    let LCIS be an array of size |smaller| = {0}
    let maxLCIS = 0
    for i = 0 to |bigger| - 1
        let currentLCIS = 0
        for j = 0 to |smaller| - 1
            if bigger[i] == smaller[j]
                LCIS[j] = max(LCIS[j], currentLCIS + 1)
                if LCIS[j] > maxLCIS
                    maxLCIS = LCIS[j]
            else if bigger[i] > smaller[j]
                currentLCIS = max(LCIS[j], currentLCIS)
    return maxLCIS